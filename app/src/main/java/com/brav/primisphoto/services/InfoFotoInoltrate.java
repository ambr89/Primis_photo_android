package com.brav.primisphoto.services;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 10/27/2017 2:35:58 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class InfoFotoInoltrate implements KvmSerializable {
    
    public int numFoto;
    public String note;
    public VectorInt32 schedeAllegatiIds;
    public String numScheda;
    public String username;
    public String password;

    public InfoFotoInoltrate(){}
    
    public InfoFotoInoltrate(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("NumFoto"))
        {
            Object obj = soapObject.getProperty("NumFoto");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numFoto = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numFoto = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Note"))
        {
            Object obj = soapObject.getProperty("Note");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                note = j.toString();
            }else if (obj!= null && obj instanceof String){
                note = (String) obj;
            }
        }
        if (soapObject.hasProperty("schedeAllegatiIds"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("schedeAllegatiIds");
            schedeAllegatiIds = new VectorInt32(j);
        }
        if (soapObject.hasProperty("NumScheda"))
        {
            Object obj = soapObject.getProperty("NumScheda");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numScheda = j.toString();
            }else if (obj!= null && obj instanceof String){
                numScheda = (String) obj;
            }
        }
        if (soapObject.hasProperty("Username"))
        {
            Object obj = soapObject.getProperty("Username");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                username = j.toString();
            }else if (obj!= null && obj instanceof String){
                username = (String) obj;
            }
        }
        if (soapObject.hasProperty("Password"))
        {
            Object obj = soapObject.getProperty("Password");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                password = j.toString();
            }else if (obj!= null && obj instanceof String){
                password = (String) obj;
            }
        }

    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return numFoto;
            case 1:
                return note;
            case 2:
                return schedeAllegatiIds;
            case 3:
                return numScheda;
            case 4:
                return username;
            case 5:
                return password;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumFoto";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Note";
                break;
            case 2:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "schedeAllegatiIds";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumScheda";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Username";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Password";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
